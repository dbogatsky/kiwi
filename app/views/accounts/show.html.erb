<% content_for :pageheader do %>
  <h2><i class="fa fa-briefcase"></i><%= @account.name %></h2>
  <div class="breadcrumb-wrapper">
    <span class="label">You are here:</span>
    <ol class="breadcrumb">
        <li><a href="/accounts">Accounts</a></li>
        <li class="active">Details</li>
    </ol>
  </div>
<% end %>

<div class="profile-header">
  <div class="row">
    <div class="col-sm-3">
      <img src="<%= (@account.avatar_url.eql? "/avatars/web/missing.png") ? '/assets/images/default_account_avatar.png' : @account.avatar_url %>" class="thumbnail img-responsive" alt="">
      <div class="mb30"></div>
      <h5 class="subtitle">Contact</h5>
        <ul class="profile-social-list" id="account-contacts">
          <% if !@account.contact_name.nil? %>
            <li><i class="fa fa-briefcase"></i>  <%= @account.contact_name %>
              <% if !@account.contact_title.nil? %>
                 <br ><div style="margin-left: 30px;"><small><%= @account.contact_title %></small></div>
              <% end %>
            </li>
          <% end %>
          <% @account.contacts.each do |contact| %>
            <% if contact.type == "email" %>
              <li id="<%= dom_id(contact) %>"><i class="fa fa-<%= contact.icon_name %>"></i><a href="mailto:<%= contact.value %>"><%= contact.value %></a></li>
            <%elsif  contact.type == "website"%>
             <li id="<%= dom_id(contact) %>"><i class="fa fa-globe"></i><a href="<%= contact.value %>" target="_blank"><%= contact.value %></a></li>
            <% else %>
              <li id="<%= dom_id(contact) %>"><i class="fa fa-<%= contact.icon_name %>"></i><%= contact.value %></li>
            <% end %>
          <% end %>
        </ul>
      <div class="mb30"></div>

      <h5 class="subtitle">Address&nbsp;<i class="fa fa-map-marker"></i>
        <!--<a href="#" data-toggle="modal" data-target=".address-modal-form" class="pull-right account_icons">+ Add</a>-->
      </h5>
      <ul class="profile-social-list" id="account-addresses">
        <% @account.addresses.each_with_index do |address, index| %>
          <li id="<%= dom_id(address) %>" style="border-bottom:0px;">
            <address>
              <% if !address.name.nil? && !address.name.empty? %>
                <strong><%= address.name %></strong>
              <% end %>

              <% if (index > 0) %>
                <%= link_to account_address_path(@account, address.id), { method: :delete, remote: true, data: { confirm: 'Are you sure you want to delete this address?', toggle: "tooltip", placement: "top"}, class: "account_icons", title: "Remove"} do %>
                <i class="fa fa-trash-o"></i><br/>
                <% end %>
              <% end %>

              <a href="https://maps.google.com?daddr=<%= address.street_address %>+<%= address.city %>+<%= address.region %>+<%= address.country %>+<%= address.postcode %>" target="_blank">
              <%= address.street_address %><br>
              <%= address.city %>, <%= address.region %>, <%= address.country %><br />
              <%= address.postcode %>
              </a>
            </address>
          </li>
        <% end %>
      </ul>

      <h5 class="subtitle">About</h5>
      <p class="mb30"><%= @account.about%></p>

      <div class="mb30"></div>
      <h5 class="subtitle">Quick Facts</h5>
      <p class="mb30"><%= @account.quick_facts %></p>
    </div><!-- col-sm-3 -->

              <div class="col-sm-9">
                <div class="mb20"></div>
                <div class="row">
                  <div class="col-sm-11">
                    <div class="row">
                        <small>
                        <div class="col-sm-5">
                            <div class="row bars">
                                <div class="col-xs-5" style="text-align:right"><strong>Status</strong></div>
                                <div class="col-xs-7"><%= get_styled_status(@account, false) %></div>
                            </div>
                            <div class="row bars">
                                <div class="col-xs-5" style="text-align:right"><strong>Assigned To</strong></div>
                                <div class="col-xs-7"><%= (@account.assigned_to.nil? ? "Unkonwn" : "#{@account.assigned_to.first_name} #{@account.assigned_to.last_name}") %></div>
                            </div>
                            <div class="row bars">
                                <div class="col-xs-5" style="text-align:right"><strong>Shared With</strong></div>
                                <div class="col-xs-7">
                                  <a href="#" data-toggle="modal" data-target=".account-shared-users">
                                    <%= @account.user_account_sharings.count == 0 ? "Nobody" : "#{pluralize(@account.user_account_sharings.count, 'user')}" %>
                                  </a>
                                </div>
                            </div>
                        </div><!-- col-sm-4 -->
                        <div class="col-sm-7">
                            <div class="row bars">
                                <div class="col-xs-5" style="text-align:right"><strong>Created</strong></div>
                                <div class="col-xs-7"><%= @account.created_at.to_datetime.in_time_zone(current_user.time_zone).strftime("%B %e, %Y at %I:%M%p") %></div>
                            </div>
                            <div class="row bars">
                                <div class="col-xs-5" style="text-align:right"><strong>Updated</strong></div>
                                <div class="col-xs-7"><%= @account.updated_at.to_datetime.in_time_zone(current_user.time_zone).strftime("%B %e, %Y at %I:%M%p") %></div>
                            </div>
                            <div class="row bars">
                                <div class="col-xs-5" style="text-align:right"><strong>Updated By</strong></div>
                                <div class="col-xs-7"><%= @account.updated_by.nil? ? "" : @account.updated_by.first_name + " " + @account.updated_by.last_name %></div>
                            </div>
                        </div><!-- col-sm-4 -->
                        </small>
                    </div><!-- row -->
                  </div>
                </div>

      <div class="mb40"></div>

      <% if can? :read, Conversation %>
        <h5 class="subtitle">Conversation</h5>
      <% end %>

        <div class="row">
          <div class="col-sm-6">
            <% if can? :read, ConversationItem %>
              <%= render "conversation_search" %>
            <% end %>
          </div>
          <div class="col-sm-6">
            <% if ( can? :manage_permission, Conversation ) || ( can? :manage_permission, Account ) %>
              <div class="btn-group mr5 pull-right">
                <button data-toggle="dropdown" class="btn btn-primary dropdown-toggle" type="button">
                    <i class="fa fa-plus-circle mr5"></i> Action
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu">

                  <% if can? :manage_permission, ConversationItem %>
                    <li><a href="#" data-toggle="modal" data-target=".account-action-meeting">Schedule Meeting</a></li>
                    <li><a href="#" data-toggle="modal" data-target=".conversation-note-modal-form">Add Note</a></li>
                    <li><a href="#" data-toggle="modal" data-target=".conversation-reminder-modal-form">Add Reminder</a></li>
                    <li><a href="#" data-toggle="modal" data-target=".conversation-quote-modal-form">Add Quote</a></li>
                    <li><a href="#" data-toggle="modal" data-target=".account-action-email">Send Email</a></li>
                    <% end %>

                  <% if can? :manage_shared_accounts, @account %>

                    <% if can? :manage_permission, ConversationItem %><li class="divider"></li><% end %>

                    <li><a href="<%= edit_account_path(@account) %>">Edit Account</a></li>
                  <% end %>
                </ul>
              </div>
            <% end %>

          </div><!-- col -->
        </div><!-- row -->



      <div class="mb20"></div>

      <% if can? :read, ConversationItem %>
        <!--- Timeline Start -->
        <div id="timeline_show">
         <%= render "conversation_timeline" %>
        </div>
        <!-- Timeline End -->
      <% end %>

    </div> <!-- col-sm-9 -->
  </div><!-- row -->
</div><!-- profile-header -->

<% content_for :outside_section do %>
  <!-- add contact modal form -->
  <div id="contact-modal" class="modal fade contact-modal-form" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="panel panel-dark panel-alt">
          <div class="panel-heading">
            <button aria-hidden="true" data-dismiss="modal" class="close" type="button" style="color: white !important; opacity: 1.0 !important">&times;</button>
            <h3 class="panel-title">New Contact</h3>
          </div>
          <div class="panel-body">
            <%#= render :partial => "contacts/form", review: Contact.new(account_id: @account.id) %>
            <%= render :partial => "contacts/form" %>
          </div><!-- panel -->
        </div>
      </div>
    </div>
  </div>
  <!-- end of add contact modal form -->

  <!-- add address modal form -->
  <div id="address-modal" class="modal fade address-modal-form" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="panel panel-dark panel-alt">
          <div class="panel-heading">
            <button aria-hidden="true" data-dismiss="modal" class="close" type="button" style="color: white !important; opacity: 1.0 !important">&times;</button>
            <h3 class="panel-title">New Address</h3>
          </div>
          <div class="panel-body">
            <%= render :partial => "addresses/form", review: Address.new(account_id: @account.id) %>
          </div><!-- panel -->
        </div>
      </div>
    </div>
  </div>
  <!-- end of add address modal form -->

  <!-- add conversation schedule modal form -->
  <%= render "conversation_meeting", account: @account %>
  <%= render "conversation_email" %>
  <%= render "conversation_email_edit" %>
  <%= render "conversation_note" %>
  <%= render "conversation_note_edit", account: @account%>
  <%= render "conversation_meeting_edit", account: @account %>
  <%= render "conversation_quote_edit", account: @account %>
  <%= render "conversation_meeting_complete", account: @account %>
  <%= render "conversation_quote", account: @account%>
  <%= render "conversation_quote_complete", account: @account%>
  <%= render "conversation_reminder", account: @account %>
  <%= render "conversation_reminder_edit", account: @account%>
  <%= render "conversation_sharedusers" %>
<% end %>


<% content_for :custom_js do %>
  <script>

    $(document).on('change', '.meeting_type', function(){
      if($(this).val() == 'regular'){
        $('.end-date-time').hide(500);
        $('.all-day').show(500)
        $('.start-time').hide(500)
        $('#schedule-from-timepicker').attr('required', false)
        $('#schedule-from-timepicker').val(null)
        $('#schedule-to-datepicker').attr('required', false)
        $('#schedule-to-timepicker').attr('required', false)
        $(".repeat_div").hide(500);
        $("#meeting-repeat-settings").show(500);
        $("#repeat-frequency").attr('required', true);
        $("#repeat-occurrences").attr('required', true);
        $("#repeat-every-day").attr('required', true);

      }else{

        $('.end-date-time').show(500);
        $('.all-day').hide(500)
        $('.start-time').show(500)
        $('#schedule-from-timepicker').attr('required', true)
        $('#schedule-to-datepicker').attr('required', true)
        $('#schedule-to-timepicker').attr('required', true)
        $(".repeat_div").show(500);
        $("#meeting-repeat-settings").hide(500);
        $("#repeat-frequency").val(null);
        $("#repeat-occurrences").val(null);
        $('#repeat-every-day').val(null);
        $('#repeat-every-week').val(null);
        $('#repeat-every-month').val(null);
        $('#repeat-every-year').val(null);
        $('#repeat-every-month-on').val(null);
        $('#repeat-frequency-weekday-on').val(null);
        $("#repeat-frequency").attr('required', false);
        $("#repeat-occurrences").attr('required', false);
        $("#repeat-every-day").attr('required', false);
      }
    });

    $(".amount_val").keypress(function(event) {
      if ((event.which != 46 || $(this).val().indexOf('.') != -1) &&
        ((event.which < 48 || event.which > 57) &&
          (event.which != 0 && event.which != 8))) {
        event.preventDefault();
      }
      var text = $(this).val();
      if ((text.indexOf('.') != -1) &&
        (text.substring(text.indexOf('.')).length > 2) &&
        (event.which != 0 && event.which != 8) &&
        ($(this)[0].selectionStart >= text.length - 2)) {
        event.preventDefault();
      }
    });

    $(".amount_val").focusout(function(){
       var re = /^-?[0-9]+$/;
       var num = $(this).val();
       if (re.test(num)){
          num = num + '.00';
          $(this).val(num);
       }else if(!re.test(num) && num != '' ){
         var length = parseFloat(num).toFixed(2).replace(/^-?\d*\.?|0+$/g, '').length
         if(length == 1){
          num = num + '0';
          $(this).val(num);
        }else if (length < 1){
          num = parseFloat(num) + '.00';
          $(this).val(num);
        }
      }
    });


    function Comma(num) {
    var s = num.split('.');
    if (s[0].length > 14) {
      // Too many numbers before decimal.
    }
    if (s[1].length > 4) {
      // Too many numbers after decimal.
    }
  }

    $(".exp_in").click(function(){
      if($(this).is(':checked')){
        $(".get_date").attr('disabled', false)
        $(".get_date").attr('required', true)
        $(".set_date").attr('disabled', true)
        $(".set_date").attr('required', false)
      }
    })

    $(".exp_after").click(function(){
      if($(this).is(':checked')){
        $(".set_date").attr('disabled', false)
        $(".set_date").attr('required', true)
        $(".get_date").attr('disabled', true)
        $(".get_date").attr('required', false)
      }
    })

    $('#preloader').css('opacity', 0.8);
    $('#preloader').hide();

    $(document).on('click', '.ui-datepicker-next, .ui-datepicker-prev', function(e){
      e.stopPropagation();
    });

    $(".submit_search").click(function(){
      $( ".close_tab").trigger("click");
      $('#preloader').css('opacity', 0.3);
      $('#preloader').show();
    });

    $("#add_shared_user").select2({
      width: '100%'
    });

    var new_editor, edit_editor;
    $(function() {
      new_editor = $('#new_editor').wysihtml5({'font-styles': false, 'image': false, 'link':false});
      edit_editor = $('#edit_editor').wysihtml5({'font-styles': false, 'image': false, 'link':false});
    });

    var new_quote, edit_quote;
    $(function() {
      new_quote = $('#new_quote').wysihtml5({'font-styles': false, 'image': false, 'link':false});
      edit_quote = $('#quote_edit').wysihtml5({'font-styles': false, 'image': false, 'link':false});
    });

    var email_new_editor, email_edit_editor;
    $(function() {
      email_new_editor = $('#email_new_editor').wysihtml5({'font-styles': false, 'image': false, 'link':false});
      email_edit_editor = $('#email_edit_editor').wysihtml5({'font-styles': false, 'image': false, 'link':false});
    });

    var meeting_new_editor, meeting_edit_editor;
    $(function() {
      meeting_new_editor = $('#meeting_new_editor').wysihtml5({'font-styles': false, 'image': false, 'link':false});
      meeting_edit_editor = $('#meeting_edit_editor').wysihtml5({'font-styles': false, 'image': false, 'link':false});
    });

    var complete_meeting_editor;
    $(function() {
      complete_meeting_editor = $('#complete_meeting_editor').wysihtml5({'font-styles': false, 'image': false, 'link':false});
    });

    var complete_quote_editor;
    $(function() {
      complete_quote_editor = $('#complete_quote_editor').wysihtml5({'font-styles': false, 'image': false, 'link':false});
    });

    var new_reminder, edit_reminder;
    $(function() {
      new_reminder = $('#new_reminder').wysihtml5({'font-styles': false, 'image': false, 'link':false});
      edit_reminder = $('#edit_reminder').wysihtml5({'font-styles': false, 'image': false, 'link':false});
    });

    $(document).on('click', "a.edit_email", function(e){
      id = $(this).attr('data-id')
      $('.conversation-edit-email-modal-form input[name="conversation_item[invitees]"]').val($(this).attr('data-invitees'));
      $('.conversation-edit-email-modal-form input[name="conversation_item[title]"]').val($(this).attr('data-title'));
      $('.conversation-edit-email-modal-form input[name="scheduled_time"]').val($(this).attr('data-time'));
      $('.conversation-edit-email-modal-form input[name="scheduled_date"]').val($(this).attr('data-date'));
      email_edit_editor.data("wysihtml5").editor.setValue($(this).attr('data-body'));
      $('.conversation-edit-email-modal-form input[name="conversation_item[id]"]').val($(this).attr('data-id'));

      if ($('.conversation-edit-email-modal-form input[name="scheduled_time"]').val()!="" || $('.conversation-edit-email-modal-form input[name="scheduled_date"]').val()!="") {
        $("#send_later_edit").attr('checked', true);
        $("#email-sendlater-settings-edit").show(500);
        $("#emailDatePickerEdit").attr('required', true);
        $("#emailTimePickerEdit").attr('required', true);
      }
      else {
        $("#email-sendlater-settings").hide(500);
        $("#send_later_edit").attr('checked', false);
        $("#emailDatePickerEdit").attr('required', false);
        $("#emailTimePickerEdit").attr('required', false);
      }
    });


    $(document).on('click', "a.edit_note", function(e){
      id = $(this).attr('data-id')
      $('.conversation-edit-note-modal-form input[name="conversation_item[title]"]').val($(this).attr('data-title'));
      // $('.conversation-edit-note-modal-form textarea[name="covnersation_item[body]"]').val($(this).attr('data-description'));
      edit_editor.data("wysihtml5").editor.setValue($(this).attr('data-description'));
      $('.conversation-edit-note-modal-form input[name="conversation_item[id]"]').val($(this).attr('data-id'));
    });

    $(document).on('click', "a.edit_reminder", function(e){
      id = $(this).attr('data-id')
      $('.conversation-edit-reminder-modal-form input[name="conversation_item[title]"]').val($(this).attr('data-title'));
      $('.conversation-edit-reminder-modal-form input[name="scheduled_time"]').val($(this).attr('data-time'));
      $('.conversation-edit-reminder-modal-form input[name="scheduled_date"]').val($(this).attr('data-date'));
      edit_reminder.data("wysihtml5").editor.setValue($(this).attr('data-description'));
      var user_ids = $(this).attr('data-users-to-notify-ids')
      user_ids.replace(/'/g, '"');
      user_ids = JSON.parse(user_ids)
      user_ids = user_ids.join().split(',')
      $('.conversation-edit-reminder-modal-form select[name="conversation_item[users_to_notify_ids][]"]').select2().val(user_ids);
      $('.conversation-edit-reminder-modal-form select[name="conversation_item[users_to_notify_ids][]"]').select2().val(user_ids);

      if($(this).attr('data-notify-by-email') == 'true'){
        $('#reminder-email-edit').attr('checked', true);
      }

      if($(this).attr('data-notify-by-sms') == 'true'){
        $('#reminder-sms-edit').attr('checked', true);;
      }

      $('.conversation-edit-reminder-modal-form input[name="conversation_item[id]"]').val($(this).attr('data-id'));
      if ($(this).attr('data-notify-by-email')=='true') {
        $('.conversation-edit-reminder-modal-form input[name="conversation_item[notify_by_email]"]').prop('checked', true); }
      if ($(this).attr('data-notify-by-sms')=='true') {
      $('.conversation-edit-reminder-modal-form input[name="conversation_item[notify_by_sms]"]').prop('checked', true); }
    });

    $(document).on('click', "a.edit_meeting", function(e){
      id = $(this).attr('data-id')
      invitees = $(this).attr('data-invitees')
      invitees_array = invitees.split(',')
      $.each(invitees_array, function(index, value){
        $("#edit_tag_input").before( "<span>"+value+"</span>");;
      });
      $('.conversation-edit-meeting-modal-form input[name="conversation_item[invitees]"]').val($(this).attr('data-invitees'));
      $('.conversation-edit-meeting-modal-form input[name="conversation_item[title]"]').val($(this).attr('data-title'));
      $('.conversation-edit-meeting-modal-form input[name="conversation_item[location]"]').val($(this).attr('data-location'));
      $('.conversation-edit-meeting-modal-form input[name="scheduled_time"]').val($(this).attr('data-time'));
      $('.conversation-edit-meeting-modal-form input[name="scheduled_date"]').val($(this).attr('data-date'));
      $('.conversation-edit-meeting-modal-form input[name="starts_date"]').val($(this).attr('data-starts-date'));
      $('.conversation-edit-meeting-modal-form input[name="starts_time"]').val($(this).attr('data-starts-time'));
      $('.conversation-edit-meeting-modal-form input[name="ends_date"]').val($(this).attr('data-ends-date'));
      $('.conversation-edit-meeting-modal-form input[name="ends_time"]').val($(this).attr('data-ends-time'));
      $('.conversation-edit-meeting-modal-form select[name="conversation_item[item_type]"]').val($(this).attr('data-item-type'));
      if($(this).attr('data-item-type') == 'regular'){
        $(".repeat_div").hide();
        $(".end-date-time").hide();
        $(".start-time").hide();
        $(".all-day").show();
        $("#schedule-to-datepicker-edit").attr('required', false);
        $("#schedule-to-timepicker-edit").attr('required', false);
        $("#schedule-from-timepicker-edit").attr('required', false);
        $("#schedule-to-datepicker-edit").val(null);
        $("#schedule-to-timepicker-edit").val(null);
        $("#schedule-from-timepicker-edit").val(null);
      }else{
        $(".repeat_div").show();
        $(".end-date-time").show();
        $(".start-time").show();
        $(".all-day").hide();
        $("#schedule-to-datepicker-edit").attr('required', true);
        $("#schedule-to-timepicker-edit").attr('required', true);
        $("#schedule-from-timepicker-edit").attr('required', true);
      }

      $("#repetition_rule_value").val($(this).attr('data-repetition-rule'));

      if ($('.conversation-edit-meeting-modal-form input[name="scheduled_time"]').val()!="" && $('.conversation-edit-meeting-modal-form input[name="scheduled_date"]').val()!="")
        {
          $("#meeting-reminder-edit").attr('checked', true);
          $("#meeting-reminder-settings-edit").show(500);
          $("#meeting-reminder-settings-edit").show(500);
        }else{
          $("#meeting-reminder-edit").attr('checked', false);
          $("#meeting-reminder-settings-edit").hide(500);
          $("#meeting-reminder-settings-edit").hide(500);
          $('.conversation-edit-meeting-modal-form input[name="scheduled_date"]').val(null);

        }
      // $('.conversation-edit-meeting-modal-form textarea[name="conversation_item[body]"]').val($(this).attr('data-body'));
       meeting_edit_editor.data("wysihtml5").editor.setValue($(this).attr('data-body'));

      $('.conversation-edit-meeting-modal-form input[name="conversation_item[id]"]').val($(this).attr('data-id'));
      $('.conversation-edit-meeting-modal-form input[name="conversation_item[latitude]"]').val($(this).attr('data-latitude'));
      $('.conversation-edit-meeting-modal-form input[name="conversation_item[longitude]"]').val($(this).attr('data-longitude'));
    });

    $(document).on('click', "a.complete_meeting", function(e){
      id = $(this).attr('data-id')
      status = $(this).attr('data-status')
      notes = $(this).attr('data-notes')
      $('.conversation-complete-meeting-modal-form input[name="conversation_item[id]"]').val($(this).attr('data-id'));
      if (status != "scheduled"){
        $('.conversation-complete-meeting-modal-form select[name="conversation_item[status]"]').val(status);
      }
      if (notes != ''){
        complete_meeting_editor.data("wysihtml5").editor.setValue(notes);
      }
    });

    $(document).on('click', "a.complete_quote", function(e){
      id = $(this).attr('data-id')
      var status = $(this).attr('data-status')
      if (status == 'open'){
         status = ''
      }
      var notes = $(this).attr('data-notes')
      $('.conversation-complete-quote-modal-form input[name="conversation_item[id]"]').val($(this).attr('data-id'));
      if (status != "scheduled"){
        $('.conversation-complete-quote-modal-form select[name="conversation_item[status]"]').val(status);
      }
      if (notes != ''){
        complete_quote_editor.data("wysihtml5").editor.setValue(notes);
      }
    });

      // hide show quote reminder settings
      $("#quote-reminder-settings").hide();
      $("#quote-reminder-settings-edit").hide();

      $('#quote-reminder, #quote-reminder-edit').change(function () {
        if ($(this).is(':checked')) {
          $("#quote-reminder-settings").show(500);
          $("#quote-reminder-settings-edit").show(500);
          $(".clear_date").attr('required', true);
          $(".clear_time").attr('required', true);
        }
        else {
          $("#quote-reminder-settings").hide(500);
          $("#quote-reminder-settings-edit").hide(500);
          $(".clear_date").attr('required', false);
          $(".clear_time").attr('required', false);
          $(".clear_date").val(null)
        }
      });

    $(document).on('click', "a.edit_quote", function(e){
      id = $(this).attr('data-id')
      status = $(this).attr('data-status')
      body = $(this).attr('data-description')
      $('.conversation-edit-quote-modal-form input[name="conversation_item[id]"]').val($(this).attr('data-id'));
      $('.conversation-edit-quote-modal-form select[name="conversation_item[status]"]').val(status);
      $('.conversation-edit-quote-modal-form input[name="conversation_item[amount]"]').val($(this).attr('data-amount'));
      if (body != ''){
        edit_quote.data("wysihtml5").editor.setValue(body);
      }
      $('.conversation-edit-quote-modal-form input[name="follow_time"]').val($(this).attr('data-time'));
      $('.conversation-edit-quote-modal-form input[name="follow_date"]').val($(this).attr('data-date'));
      $('.conversation-edit-quote-modal-form input[name="conversation_item[title]"]').val($(this).attr('data-title'));
      $('.conversation-edit-quote-modal-form input[name="expires_in"]').val($(this).attr('data-ends-day'));
      $('.conversation-edit-quote-modal-form input[name="expires_after"]').val($(this).attr('data-ends-date'));
      if ($(this).attr('data-time') != '' && $(this).attr('data-date') != ''){
        $("#quote-reminder-edit").attr('checked', true);
        $(".clear_date").attr('required', true);
        $(".clear_time").attr('required', true);
        $("#quote-reminder-settings-edit").show();
      }else{
        $("#quote-reminder-edit").attr('checked', false);
        $("#quote-reminder-settings-edit").hide();
        $(".clear_date").attr('required', false);
        $(".clear_time").attr('required', false);
      }
      getdate($(this).attr('data-ends-day'));
      $(".display_date").val(final_date)
      $(".set_date").attr('disabled', true)
      $(".get_date").attr('disabled', false)
    });

    $('#follow_time').timepicker({
      minuteStep: 15
    });

    $(document).ready(function(){
      $.fn.editable.defaults.ajaxOptions = {type: "PUT"};
      jQuery('.account-contact-editable').editable({
        send: 'always',
        validate: function(value) {
          if($.trim(value) == '') return 'This field is required';
        },
        params: function (params) {
          var data = {};
          var contact = {};
          data['authenticity_token'] = "<%= form_authenticity_token %>";
          contact['id'] = params.id;
          contact['name'] = $(this).editable().data('contactname');;
          contact['type'] = $(this).editable().data('contacttype');
          contact['value'] = params.value;
          data['contact'] = contact;
          return data;
        },
        success: function(response, newValue) {
          console.log(JSON.stringify(response));
          if(response.status == 'error'){
            return response.msg; //msg will be shown in editable form
          }
        }
      });

      jQuery("#account-contact-add-form").validate({
        highlight: function(element) {
          jQuery(element).closest('.form-group').removeClass('has-success').addClass('has-error');
        },
        success: function(element) {
          jQuery(element).closest('.form-group').removeClass('has-error');
        }
      });

      jQuery("#account-address-add-form").validate({
        highlight: function(element) {
          jQuery(element).closest('.form-group').removeClass('has-success').addClass('has-error');
        },
        success: function(element) {
          jQuery(element).closest('.form-group').removeClass('has-error');
        }
      });

  		// Tags Input
  		jQuery('#invite-emails').tagsInput({
  			width:'100%',
  			height: 'auto',
  			onAddTag:isValidEmailAddress,
  			defaultText:'Invitees'
  		});
  		function isValidEmailAddress(emailAddress) {
  		    var pattern = /^([a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+(\.[a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+)*|"((([ \t]*\r\n)?[ \t]+)?([\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*(([ \t]*\r\n)?[ \t]+)?")@(([a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.)+([a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.?$/i;

  		    if (pattern.test(emailAddress) == false) {
  				alert("Please add a valid email address");
  				$('#invite-emails').removeTag(emailAddress);
  		    }
  		};

  		$('#meeting-reminder-time, #meeting-reminder-time-edit').timepicker({minuteStep: 5});

  		// by default hide reminder settings for meetings
  		$("#meeting-reminder-settings").hide();

  		// hide show note reminder settings for meetings
  		$('#meeting-reminder, #meeting-reminder-edit').change(function () {
  	    if ($(this).is(':checked')) {
  		    $("#meeting-reminder-settings, #meeting-reminder-settings-edit").show(500);
          $("#meeting-reminder-date").attr('required', true);
          $("#meeting-reminder-time").attr('required', true)
          $("#meeting-reminder-date-edit").attr('required', true);
          $("#meeting-reminder-time-edit").attr('required', true)
        }else {
  			$("#meeting-reminder-settings, #meeting-reminder-settings-edit").hide(500);
        $('.conversation-edit-meeting-modal-form input[name="scheduled_date"]').val(null);
        $("#meeting-reminder-date").attr('required', false);
        $("#meeting-reminder-time").attr('required', false)
        $("#meeting-reminder-date-edit").attr('required', false);
        $("#meeting-reminder-time-edit").attr('required', false)
  		  }
  		});

    if(mobile == 'false'){
      $('#reminderDatePicker, #reminderDatePickerEdit').datepicker({
        dateFormat: 'mm/dd/yy',
        minDate: 0
      });
    }

    $('#reminderDatePicker').change(function(){
      if(mobile == 'false'){
        var select_date = $(this).val()
      }else{
        var select_date = today_date(new Date($(this).val()))
      }
      if(select_date == today_date(new Date)){
        var c_time = set_time_when_date_change()
        $("#reminderTimePicker").timepicker("setTime", c_time)
      }
    });


    $('#reminderDatePickerEdit').change(function(){
      if(mobile == 'false'){
        var select_date = $(this).val()
      }else{
        var select_date = today_date(new Date($(this).val()))
      }
      if(select_date == today_date(new Date)){
        var c_time = set_time_when_date_change()
        $("#reminderTimePickerEdit").timepicker("setTime", c_time)
      }
    });

    function set_time_when_date_change(){
      var next_time = new Date();
      var n = next_time.getMinutes()
      // var closest
      // if (n<=7){
      //   closest = 0;
      // }else if(n>7 && n<=22){
      //   closest = 15;
      // }
      // else if (n>22 && n<= 37){
      //   closest = 30;
      // }else if(n>37 && n<=52){
      //  closest = 45;
      // }else if(n>52 && n<=60){
      //   closest = 60;
      // }
      var time_val = n + 30
      next_time.setMinutes(time_val);
      var c_time = set_time(next_time)
      return c_time
    }

    $('#reminderTimePicker').timepicker({
        showMeridian: true,
        minuteStep: 15,
        showInputs: false,
    }).on('changeTime.timepicker', function(e) {
       if (mobile == 'false'){
          var  date_val = $('#reminderDatePicker').val()
       }else{
          var date_val = today_date(new Date($('#reminderDatePicker').val()))
       }
        if((date_val != '') && (date_val == today_date(new Date))){
          set_reminder_time(e)
        }
    });

    $('#reminderTimePickerEdit').timepicker({
      showMeridian: true,
      minuteStep: 15,
      showInputs: false,
    }).on('changeTime.timepicker', function(e) {
       if (mobile == 'false'){
          var  date_val = $('#reminderDatePickerEdit').val()
        }else{
          var date_val = today_date(new Date($('#reminderDatePickerEdit').val()))
        }

        if((date_val != '') && (date_val == today_date(new Date))){
          set_reminder_time(e)
        }
    });

    function today_date(date){
      var current_date = date
      var date = current_date.getDate();
      var month = current_date.getMonth()+1;
      var year = current_date.getFullYear();
      if(date<10) {
          date='0'+date
      }
      if(month<10) {
          month='0'+month
      }
      current_date = month+'/'+date+'/'+year;
      return current_date;
    }

    function set_reminder_time(a){
      ConvertTimeformat('24', a.time.value);
      total_minutes = parseInt(sHours)*60 + parseInt(sMinutes);
      var d = new Date();
      var current_t = set_time(d)
      ConvertTimeformat('24', current_t);
      total_current_minutes = parseInt(sHours)*60 + parseInt(sMinutes);

      if((total_minutes) < total_current_minutes+30){
        var display_time = new Date();
        var n =  display_time.getMinutes();
        // var closest
        // if (n<=7){
        //   closest = 0;
        // }else if(n>7 && n<=22){
        //   closest = 15;
        // }
        // else if (n>22 && n<= 37){
        //   closest = 30;
        // }else if(n>37 && n<=52){
        //  closest = 45;
        // }else if(n>52 && n<=60){
        //   closest = 60;
        // }
        var time_val = n + 30
        display_time.setMinutes(time_val);
        var c_time = set_time(display_time)
        $("#reminderTimePicker").timepicker("setTime", c_time);
        $("#reminderTimePickerEdit").timepicker("setTime", c_time);
      }
    }

    function set_time(t){
      var hh = t.getHours();
      var m = t.getMinutes();
      var dd = 'AM';
      var h = hh;
      if (h >= 12) {
          h = hh-12;
          dd = "PM";
      }
      if (h == 0) {
          h = 12;
      }
      m = m<10?"0"+m:m;
      var current_time = h+":"+m+" "+dd;
      return current_time
    }

    function ConvertTimeformat(format, str) {
      var time = str
      var hours = Number(time.match(/^(\d+)/)[1]);
      var minutes = Number(time.match(/:(\d+)/)[1]);
      var AMPM = time.match(/\s(.*)$/)[1];
      if (AMPM == "PM" && hours < 12) hours = hours + 12;
      if (AMPM == "AM" && hours == 12) hours = hours - 12;
        sHours = hours.toString();
        sMinutes = minutes.toString();
      if (hours < 10) sHours = "0" + sHours;
      if (minutes < 10) sMinutes = "0" + sMinutes;
    }

  		// by default hide reminder settings for notes
  		$("#note-reminder-settings").hide();
      $("#note-reminder-settings-edit").hide();

  		// hide show note reminder settings
  		$('#note-reminder, #note-reminder-edit').change(function () {
  		  if ($(this).is(':checked')) {
          $("#note-reminder-settings").show(500);
          $("#note-reminder-settings-edit").show(500);
        }
        else {
  				$("#note-reminder-settings").hide(500);
          $("#note-reminder-settings-edit").hide(500);
  			}
  		});

      if(mobile == 'false'){
  		  $('#scheduledDatePicker').datepicker();
        $('#emailDatePickerEdit').datepicker();
      }
      $('#scheduledTimePicker').timepicker({minuteStep: 5});


      $('#emailTimePickerEdit').timepicker({minuteStep: 5});

  		// by default hide reminder settings for emails
  		$("#email-sendlater-settings").hide();
      $("#email-sendlater-settings-edit").hide();

  		// hide show email reminder settings
  		$('#send-later, #send_later_edit').change(function () {
  		    if ($(this).is(':checked')) {
  			    $("#email-sendlater-settings, #email-sendlater-settings-edit").show(500);
            $("#scheduledDatePicker").attr('required', true);
            $("#emailDatePickerEdit").attr('required', true);
            $("#scheduledTimePicker").attr('required', true);
            $("#emailTimePickerEdit").attr('required', true);
  			}
  			else {
  				$("#email-sendlater-settings, #email-sendlater-settings-edit").hide(500);
          $("#scheduledDatePicker").val(null);
          $("#emailDatePickerEdit").val(null);
          $("#scheduledDatePicker").attr('required', false);
          $("#emailDatePickerEdit").attr('required', false);
          $("#scheduledTimePicker").attr('required', false);
          $("#emailTimePickerEdit").attr('required', false);
  			}
  		});

      $(".conversation-quote-modal-form").on("shown.bs.modal", function(){
        $(".follow_time_div").hide();
        $("#follow-reminder").attr('checked', false)
        $(".exp_in").attr('checked', true)
        $(".get_date").attr('disabled', false)
        $(".set_date").attr('disabled', true)
      });

      $(".conversation-edit-quote-modal-form").on("shown.bs.modal", function(){
        $(".exp_in").attr('checked', true)
        $(".set_date").attr('disabled', true)
      });
    });

    $(".conversation-edit-reminder-modal-form").on("shown.bs.modal", function(){
      var input = document.getElementById("keyword");
      var autocomplete = new google.maps.places.Autocomplete(input);

      google.maps.event.addListener(autocomplete, 'place_changed', function() {
        var place = autocomplete.getPlace();
        var lat = place.geometry.location.lat();
        var lng = place.geometry.location.lng();
        $(".conversation-edit-reminder-modal-form[name='conversation_item[latitude]']").val(lat);
        $(".conversation-edit-reminder-modal-form[name='conversation_item[longitude]']").val(lng);
      });
    });

  var new_data = <%= raw(@notifiable_users) %>
  $("#notifiable_users").select2({
    data: new_data
  });

  $(".conversation-reminder-modal-form .select2").css('width', '100%');

    var data = <%=raw(@notifiable_users)%>;
    $("#notifiable_users_edit").select2({
      data: data
    });

    $(".conversation-edit-reminder-modal-form .select2").css('width', '100%');
    $(".conversation-edit-reminder-modal-form").on("hidden.bs.modal", function(){
      $('#reminder-email-edit').attr('checked', false);
      $('#reminder-sms-edit').attr('checked', false);
    });
  </script>
<% end %>

<% content_for :custom_css do %>
<style>
  .account_icons {
    color: #484848;
  }

  .account_icons:hover {
    text-decoration: none;
  }
  .bars {
    border-bottom: 0px dotted #ddd;
    padding: 5px;
  }

  .conversation-search {
    width: 420px;
    padding: 25px;
    margin-top: -1px;
  }

  @media only screen and (max-width: 480px) {
    .conversation-search {
      width: 360px;
    }
  }

  @media only screen and (max-width: 420px) {
    .conversation-search {
      width: 290px;
    }
  }

  @media only screen and (max-width: 348px) {
    .conversation-search {
      width: 260px;
    }
  }
</style>
<% end %>
